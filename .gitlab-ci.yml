stages:
- check
- test
- build
- release

variables:
  GO_VERSION: "1.12.9"

before_script:
- mkdir -p /go/src/github.com/kubermatic/
- cp -r $PWD /go/src/github.com/kubermatic/kubermatic
- cd /go/src/github.com/kubermatic/kubermatic

dep:
  stage: check
  image:
    name: metalmatze/dep:0.5.0
    entrypoint: ['']
  script:
  - cd api
  - dep ensure -v
  - '[[ -z "$(git diff)" ]]'
  tags:
  - shared
  - small
  - multi

gofmt:
  stage: check
  image: golang:${GO_VERSION}
  script:
  - cd api
  - make gofmt
  tags:
  - shared
  - small
  - multi

lint-docker:
  stage: check

  image: hadolint/hadolint:latest-debian

  script:
    - hadolint api/Dockerfile

  tags:
    - shared
    - small
    - multi

verify-codegen:
  stage: check
  image: golang:${GO_VERSION}
  script:
  - apt-get update && apt-get install -y --no-install-recommends bzr
  - cd api
  - ./hack/verify-codegen.sh
  tags:
  - shared
  - small
  - multi

#verify-api-client:
#  stage: check
#  image: golang:${GO_VERSION}
#  script:
#    - cd api
#    - GO111MODULE=on ./hack/verify-api-client.sh
#  tags:
#    - shared
#    - small
#    - multi

license-validation:
  stage: check
  image: metalmatze/wwhrd:1.9
  script:
  - cd api
  - wwhrd check -f ../allowed_licensed.yaml
  tags:
  - shared
  - small
  - multi

lint:
  stage: check
  image: golangci/golangci-lint:v1.23.8
  script:
  - cd api
  - export KUBERMATIC_EDITION=ee
  - GOGC=5 make lint # TODO remove GOGC again once https://github.com/golangci/golangci-lint/issues/483 is resolved
  tags:
  - shared
  - small
  - multi

verify-swagger-spec:
  stage: check
  image: golang:${GO_VERSION}
  script:
  - cd api
  - ./hack/verify-swagger.sh
  tags:
  - shared
  - small
  - multi

test:
  stage: test
  image: golang:${GO_VERSION}
  script:
  - cd api
  - make test
  tags:
  - shared
  - small
  - multi

build-kubermatic:
  stage: build
  image: golang:${GO_VERSION}
  script:
  - cd api
  - export KUBERMATIC_EDITION=ee
  - KUBERMATICCOMMIT=$CI_COMMIT_TAG make build
  artifacts:
    paths:
    - api/_build
  tags:
  - shared
  - small
  - multi

build-dnatcontroller:
  stage: build
  image: golang:${GO_VERSION}
  script:
    - cd api/cmd/kubeletdnat-controller
    - export KUBERMATIC_EDITION=ee
    - make build
  artifacts:
    paths:
      - api/cmd/kubeletdnat-controller/_build
  tags:
    - shared
    - small
    - multi

docker-release-kubermatic:
  stage: release
  image: docker:latest
  script:
  - cd api
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker login -u sys11kubermatic -p $DOCKER_PASSWORD
  - docker build --tag syseleven/kubermatic:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:latest .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  - docker push $CI_REGISTRY_IMAGE:latest
  - docker push syseleven/kubermatic:$CI_COMMIT_TAG
  dependencies:
  - build-kubermatic
  only:
  - tags
  tags:
  - shared
  - small
  - multi

docker-release-dnatcontroller:
  stage: release
  image: docker:latest
  script:
    - cd api/cmd/kubeletdnat-controller
    - docker login -u sys11kubermatic -p $DOCKER_PASSWORD
    - docker build --tag syseleven/kubeletdnat-controller:$CI_COMMIT_TAG .
    - docker push syseleven/kubeletdnat-controller:$CI_COMMIT_TAG
  dependencies:
    - build-dnatcontroller
  only:
    - tags
  tags:
    - shared
    - small
    - multi
