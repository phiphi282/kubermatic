stages:
- check
- test
- build
- release

before_script:
- mkdir -p /go/src/github.com/kubermatic/
- ln -s $PWD /go/src/github.com/kubermatic/
- cd /go/src/github.com/kubermatic/kubermatic

dep:
  stage: check
  image:
    name: metalmatze/dep:0.5.0
    entrypoint: ['']
  script:
  - cd api
  - dep ensure -v
  - '[[ -z "$(git diff)" ]]'
  tags:
  - shared
  - small
  - multi

gofmt:
  stage: check
  image: golang:1.11.0
  script:
  - cd api
  - make gofmt
  tags:
  - shared
  - small
  - multi

verify-codegen:
  stage: check
  image: golang:1.11.0
  script:
  - cd api
  - ./hack/verify-codegen.sh
  tags:
  - shared
  - small
  - multi

license-validation:
  stage: check
  image: metalmatze/wwhrd:1.9
  script:
  - cd api
  - wwhrd check -f ../allowed_licensed.yaml
  tags:
  - shared
  - small
  - multi

lint:
  stage: check
  image: quay.io/kubermatic/gometalinter:latest
  script:
  - cd api
  - make lint
  tags:
  - shared
  - small
  - multi

verify-addons-up-to-date:
  stage: check
  image: docker:stable
  script:
  - ./api/hack/verify-addon-version.sh
  tags:
  - shared
  - small
  - multi

verify-swagger-spec:
  stage: check
  image: golang:1.11.0
  script:
  - cd api
  - ./hack/verify-swagger.sh
  tags:
  - shared
  - small
  - multi

test:
  stage: test
  image: golang:1.11.0
  script:
  - cd api
  - make test
  tags:
  - shared
  - small
  - multi

build:
  stage: build
  image: golang:1.11.0
  script:
  - cd api
  - make build
  artifacts:
    paths:
    - api/_build
  tags:
  - shared
  - small
  - multi

docker-release:
  stage: release
  image: docker:latest
  script:
  - cd api
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:latest .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  - docker push $CI_REGISTRY_IMAGE:latest
  dependencies:
  - build
  only:
  - tags
  tags:
  - shared
  - small
  - multi
